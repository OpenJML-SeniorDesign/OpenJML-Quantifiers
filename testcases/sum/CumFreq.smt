; Proof attempt for CumFreq.s(int[],int,int)
(set-option :produce-models true)
(set-logic ALL)
(set-option :AUTO_CONFIG false)
(set-option :smt.MBQI false)
(declare-sort REF 0)
(declare-fun NULL () REF)
(declare-fun NULLSTRING () (Array Int Int))
(declare-fun stringConcat (REF REF ) REF)
(declare-fun stringLength ((Array Int Int) ) Int)
(declare-fun __JMLlength () (Array REF Int))
(assert (forall ((o REF) ) (>= (select __JMLlength o) 0)))
(declare-fun asIntArray (REF ) (Array Int Int))
(declare-fun asREFArray (REF ) (Array Int REF))
(declare-fun intValue (REF ) Int)
(declare-fun booleanValue (REF ) Bool)
(define-fun |#is_byte#| ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))
(define-fun |#is_short#| ((x Int)) Bool (and (<= (- 32768) x) (<= x 32767)))
(define-fun |#is_char#| ((x Int)) Bool (and (<= 0 x) (<= x 65535)))
(define-fun |#is_int#| ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(define-fun |#is_long#| ((x Int)) Bool (and (<= (- 9223372036854775808) x) (<= x 9223372036854775807)))
(define-fun |#big8#| () Int 256)
(define-fun |#big16#| () Int 65536)
(define-fun |#big32#| () Int 4294967296)
(define-fun |#big64#| () Int (* 4294967296 4294967296))
(define-fun |#max8#| () Int 127)
(define-fun |#min8#| () Int (- 128))
(define-fun |#max16#| () Int 32767)
(define-fun |#min16#| () Int (- 32768))
(define-fun |#max32#| () Int 2147483647)
(define-fun |#min32#| () Int (- 2147483648))
(define-fun |#max64#| () Int (- (* 2147483648 4294967296) 1))
(define-fun |#min64#| () Int (- (* 2147483648 4294967296)))
(define-fun |#isMul32ok#| ((x Int)(y Int)) Bool (let ((prod (* x y)) ) (and (<= |#min32#| prod) (<= prod |#max32#|))))
(define-fun |#isMul64ok#| ((x Int)(y Int)) Bool (let ((prod (* x y)) ) (and (<= |#min64#| prod) (<= prod |#max64#|))))
(define-fun |#trunc32s#| ((x Int)) Int (let ((m (mod x |#big32#|)) ) (ite (<= m |#max32#|) m (- m |#big32#|))))
(define-fun |#trunc16s#| ((x Int)) Int (let ((m (mod x |#big16#|)) ) (ite (<= m |#max16#|) m (- m |#big16#|))))
(define-fun |#trunc8s#| ((x Int)) Int (let ((m (mod x |#big8#|)) ) (ite (<= m |#max8#|) m (- m |#big8#|))))
(define-fun |#cdiv#| ((a Int)(b Int)) Int (ite (>= a 0) (div a b) (div (- a) (- b))))
(define-fun |#cmod#| ((a Int)(b Int)) Int (ite (>= a 0) (mod a b) (mod (- a) (- b))))
(define-fun |#inRange32#| ((a Int)) Bool (and (<= |#min32#| a) (<= a |#max32#|)))
(define-fun |#add32ok#| ((a Int)(b Int)) Bool (|#inRange32#| (+ a b)))
(define-fun |#add32#| ((a Int)(b Int)) Int (let ((p (+ a b)) ) (ite (|#inRange32#| p) p (ite (< |#max32#| p) (- p |#big32#|) (+ p |#big32#|)))))
(define-fun |#mul32ok#| ((a Int)(b Int)) Bool (|#inRange32#| (* a b)))
(define-fun |#mul32#| ((a Int)(b Int)) Int (let ((p (* a b)) ) (ite (|#inRange32#| p) p (+ (mod (- p |#min32#|) |#big32#|) |#min32#|))))
(define-fun |#inRange64#| ((a Int)) Bool (and (<= |#min64#| a) (<= a |#max64#|)))
(define-fun |#add64ok#| ((a Int)(b Int)) Bool (|#inRange64#| (+ a b)))
(define-fun |#add64#| ((a Int)(b Int)) Int (let ((p (+ a b)) ) (ite (|#inRange64#| p) p (ite (< |#max64#| p) (- p |#big64#|) (+ p |#big64#|)))))
(define-fun |#mul64ok#| ((a Int)(b Int)) Bool (|#inRange64#| (* a b)))
(define-fun |#mul64#| ((a Int)(b Int)) Int (let ((p (* a b)) ) (ite (|#inRange64#| p) p (+ (mod (- p |#min64#|) |#big64#|) |#min64#|))))
(declare-sort |RANGE| 0)
(declare-fun |range:cons| (Int Int ) |RANGE|)
(declare-fun |range:lo| (|RANGE| ) Int)
(declare-fun |range:hi| (|RANGE| ) Int)
(assert (forall ((i Int) (j Int) ) (= i (|range:lo| (|range:cons| i j)))))
(assert (forall ((i Int) (j Int) ) (= j (|range:hi| (|range:cons| i j)))))
(declare-sort JMLTypeSort 0)
(declare-fun javaTypeOf (REF ) REF)
(declare-fun jmlTypeOf (REF ) JMLTypeSort)
(declare-fun typearg1_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg2_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg2_2 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_1 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_2 (JMLTypeSort ) JMLTypeSort)
(declare-fun typearg3_3 (JMLTypeSort ) JMLTypeSort)
(declare-fun javaSubType (REF REF ) Bool)
(declare-fun jmlSubType (JMLTypeSort JMLTypeSort ) Bool)
(declare-fun erasure (JMLTypeSort ) REF)
(declare-fun erasure_java (REF ) REF)
(declare-fun _JMLT_0 (REF ) JMLTypeSort)
(declare-fun _JMLT_1 (REF JMLTypeSort ) JMLTypeSort)
(declare-fun _JMLT_2 (REF JMLTypeSort JMLTypeSort ) JMLTypeSort)
(declare-fun _JMLT_3 (REF JMLTypeSort JMLTypeSort JMLTypeSort ) JMLTypeSort)
(assert (forall ((o REF) ) (= (erasure (jmlTypeOf o)) (javaTypeOf o))))
(assert (forall ((o REF) ) (= (erasure_java (javaTypeOf o)) (javaTypeOf o))))
(declare-fun _makeArrayType (REF ) REF)
(declare-fun _isArrayType (REF ) Bool)
(declare-fun _makeJMLArrayType (JMLTypeSort ) JMLTypeSort)
(declare-fun _isJMLArrayType (JMLTypeSort ) Bool)
(declare-fun __arrayElemType (JMLTypeSort ) JMLTypeSort)
(assert (forall ((T JMLTypeSort) ) (= (erasure (_makeJMLArrayType T)) (_makeArrayType (erasure T)))))
(assert (forall ((T1 JMLTypeSort) (T2 JMLTypeSort) ) (=> (jmlSubType T1 T2) (javaSubType (erasure T1) (erasure T2)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) ) (= (javaSubType T1 T2) (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T3)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (and (javaSubType T1 T2) (not (= T3 T4))) (not (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T4))))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (jmlSubType (_JMLT_1 T1 T3) (_JMLT_1 T2 T4)) (and (javaSubType T1 T2) (= T3 T4)))))
(assert (forall ((T1 REF) (T2 REF) (T3 JMLTypeSort) (T4 JMLTypeSort) ) (=> (= (_JMLT_1 T1 T3) (_JMLT_1 T2 T4)) (and (= T1 T2) (= T3 T4)))))
(declare-fun nonnullelements (REF (Array REF (Array Int REF)) ) Bool)
(assert (forall ((a REF) (arrays (Array REF (Array Int REF))) ) (= (nonnullelements a arrays) (forall ((i Int) ) (=> (and (<= 0 i) (< i (select __JMLlength a))) (distinct NULL (select (select arrays a) i)))))))
(declare-fun T_java_lang_Integer () REF)
(declare-fun JMLT_java_lang_Integer () JMLTypeSort)
(declare-fun T_java_lang_Object () REF)
(declare-fun JMLT_java_lang_Object () JMLTypeSort)
(declare-fun T_java_lang_Class () REF)
(declare-fun T_java_lang_String () REF)
(declare-fun JMLT_java_lang_String () JMLTypeSort)
(declare-fun T_java_lang_RuntimeException () REF)
(declare-fun JMLT_java_lang_RuntimeException () JMLTypeSort)
(declare-fun T_java_lang_Exception () REF)
(declare-fun JMLT_java_lang_Exception () JMLTypeSort)
(declare-fun T_int () REF)
(declare-fun JMLT_int () JMLTypeSort)
(assert (not (_isArrayType T_java_lang_Integer)))
(assert (forall ((t REF) ) (=> (javaSubType t T_java_lang_Integer) (= t T_java_lang_Integer))))
(assert (not (_isJMLArrayType JMLT_java_lang_Integer)))
(assert (= (_JMLT_0 T_java_lang_Integer) JMLT_java_lang_Integer))
(assert (= (erasure JMLT_java_lang_Integer) T_java_lang_Integer))
(assert (forall ((t JMLTypeSort) ) (=> (jmlSubType t JMLT_java_lang_Integer) (= t JMLT_java_lang_Integer))))
(assert (not (_isArrayType T_java_lang_Object)))
(assert (not (_isJMLArrayType JMLT_java_lang_Object)))
(assert (= (_JMLT_0 T_java_lang_Object) JMLT_java_lang_Object))
(assert (= (erasure JMLT_java_lang_Object) T_java_lang_Object))
(assert (not (_isArrayType T_java_lang_Class)))
(assert (forall ((t REF) ) (=> (javaSubType t T_java_lang_Class) (= t T_java_lang_Class))))
(assert (not (_isJMLArrayType (_JMLT_1 T_java_lang_Class JMLT_java_lang_Integer))))
(assert (= (erasure (_JMLT_1 T_java_lang_Class JMLT_java_lang_Integer)) T_java_lang_Class))
(assert (forall ((t JMLTypeSort) ) (=> (jmlSubType t (_JMLT_1 T_java_lang_Class JMLT_java_lang_Integer)) (= t (_JMLT_1 T_java_lang_Class JMLT_java_lang_Integer)))))
(assert (not (_isArrayType T_java_lang_String)))
(assert (forall ((t REF) ) (=> (javaSubType t T_java_lang_String) (= t T_java_lang_String))))
(assert (not (_isJMLArrayType JMLT_java_lang_String)))
(assert (= (_JMLT_0 T_java_lang_String) JMLT_java_lang_String))
(assert (= (erasure JMLT_java_lang_String) T_java_lang_String))
(assert (forall ((t JMLTypeSort) ) (=> (jmlSubType t JMLT_java_lang_String) (= t JMLT_java_lang_String))))
(assert (not (_isArrayType T_java_lang_RuntimeException)))
(assert (not (_isJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (= (_JMLT_0 T_java_lang_RuntimeException) JMLT_java_lang_RuntimeException))
(assert (= (erasure JMLT_java_lang_RuntimeException) T_java_lang_RuntimeException))
(assert (not (_isArrayType T_java_lang_Exception)))
(assert (not (_isJMLArrayType JMLT_java_lang_Exception)))
(assert (= (_JMLT_0 T_java_lang_Exception) JMLT_java_lang_Exception))
(assert (= (erasure JMLT_java_lang_Exception) T_java_lang_Exception))
(assert (not (_isArrayType T_int)))
(assert (not (_isJMLArrayType JMLT_int)))
(assert (= (_JMLT_0 T_int) JMLT_int))
(assert (= (erasure JMLT_int) T_int))
(assert (distinct T_java_lang_Integer T_java_lang_Object T_java_lang_Class T_java_lang_String T_java_lang_RuntimeException T_java_lang_Exception T_int))
(assert (distinct JMLT_java_lang_Integer JMLT_java_lang_Object JMLT_java_lang_String JMLT_java_lang_RuntimeException JMLT_java_lang_Exception JMLT_int))
(assert (javaSubType T_java_lang_Integer T_java_lang_Integer))
(assert (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_Integer)))
(assert (jmlSubType JMLT_java_lang_Integer JMLT_java_lang_Integer))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_java_lang_Integer)))
(assert (javaSubType T_java_lang_Integer T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_Integer JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_Integer) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Integer T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_Class))))
(assert (not (javaSubType T_java_lang_Integer T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_Integer JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Integer)) (not (javaSubType (javaTypeOf e) T_java_lang_String)))))
(assert (not (javaSubType T_java_lang_Integer T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_Integer JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Integer)) (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)))))
(assert (not (javaSubType T_java_lang_Integer T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_Integer JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Integer)) (not (javaSubType (javaTypeOf e) T_java_lang_Exception)))))
(assert (not (javaSubType T_java_lang_Integer T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Integer) (_makeArrayType T_int))))
(assert (not (jmlSubType JMLT_java_lang_Integer JMLT_int)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Integer) (_makeJMLArrayType JMLT_int))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Integer)) (not (javaSubType (javaTypeOf e) T_int)))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Integer))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_Integer)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_Integer))))
(assert (javaSubType T_java_lang_Object T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_Object JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_Object T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Class))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_String) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_RuntimeException) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_Exception) (javaSubType (javaTypeOf e) T_java_lang_Object))))
(assert (not (javaSubType T_java_lang_Object T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Object) (_makeArrayType T_int))))
(assert (not (jmlSubType JMLT_java_lang_Object JMLT_int)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Object) (_makeJMLArrayType JMLT_int))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Object)) (not (javaSubType (javaTypeOf e) T_int)))))
(assert (not (javaSubType T_java_lang_Class T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_Integer))))
(assert (javaSubType T_java_lang_Class T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_Object)))
(assert (javaSubType T_java_lang_Class T_java_lang_Class))
(assert (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_Class)))
(assert (not (javaSubType T_java_lang_Class T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_String))))
(assert (not (javaSubType T_java_lang_Class T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (javaSubType T_java_lang_Class T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_Class T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Class) (_makeArrayType T_int))))
(assert (not (javaSubType T_java_lang_String T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Integer))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_Integer)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_Integer))))
(assert (javaSubType T_java_lang_String T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_String T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Class))))
(assert (javaSubType T_java_lang_String T_java_lang_String))
(assert (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_String)))
(assert (jmlSubType JMLT_java_lang_String JMLT_java_lang_String))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_String)))
(assert (not (javaSubType T_java_lang_String T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)))))
(assert (not (javaSubType T_java_lang_String T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_java_lang_Exception)))))
(assert (not (javaSubType T_java_lang_String T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_String) (_makeArrayType T_int))))
(assert (not (jmlSubType JMLT_java_lang_String JMLT_int)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_String) (_makeJMLArrayType JMLT_int))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_String)) (not (javaSubType (javaTypeOf e) T_int)))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Integer))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_Integer)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_Integer))))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Class))))
(assert (not (javaSubType T_java_lang_RuntimeException T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_RuntimeException))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_RuntimeException)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_RuntimeException))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_RuntimeException)))
(assert (javaSubType T_java_lang_RuntimeException T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_RuntimeException JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (forall ((e REF) ) (=> (javaSubType (javaTypeOf e) T_java_lang_RuntimeException) (javaSubType (javaTypeOf e) T_java_lang_Exception))))
(assert (not (javaSubType T_java_lang_RuntimeException T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_RuntimeException) (_makeArrayType T_int))))
(assert (not (jmlSubType JMLT_java_lang_RuntimeException JMLT_int)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_RuntimeException) (_makeJMLArrayType JMLT_int))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_RuntimeException)) (not (javaSubType (javaTypeOf e) T_int)))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Integer))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_Integer)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_Integer))))
(assert (javaSubType T_java_lang_Exception T_java_lang_Object))
(assert (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Object)))
(assert (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_Object))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_Object)))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Class))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_java_lang_Exception T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (javaSubType T_java_lang_Exception T_java_lang_Exception))
(assert (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_java_lang_Exception)))
(assert (jmlSubType JMLT_java_lang_Exception JMLT_java_lang_Exception))
(assert (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_java_lang_Exception)))
(assert (not (javaSubType T_java_lang_Exception T_int)))
(assert (not (javaSubType (_makeArrayType T_java_lang_Exception) (_makeArrayType T_int))))
(assert (not (jmlSubType JMLT_java_lang_Exception JMLT_int)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_java_lang_Exception) (_makeJMLArrayType JMLT_int))))
(assert (forall ((e REF) ) (or (not (javaSubType (javaTypeOf e) T_java_lang_Exception)) (not (javaSubType (javaTypeOf e) T_int)))))
(assert (not (javaSubType T_int T_java_lang_Integer)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_Integer))))
(assert (not (jmlSubType JMLT_int JMLT_java_lang_Integer)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_java_lang_Integer))))
(assert (not (javaSubType T_int T_java_lang_Object)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_Object))))
(assert (not (jmlSubType JMLT_int JMLT_java_lang_Object)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_java_lang_Object))))
(assert (not (javaSubType T_int T_java_lang_Class)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_Class))))
(assert (not (javaSubType T_int T_java_lang_String)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_String))))
(assert (not (jmlSubType JMLT_int JMLT_java_lang_String)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_java_lang_String))))
(assert (not (javaSubType T_int T_java_lang_RuntimeException)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_RuntimeException))))
(assert (not (jmlSubType JMLT_int JMLT_java_lang_RuntimeException)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_java_lang_RuntimeException))))
(assert (not (javaSubType T_int T_java_lang_Exception)))
(assert (not (javaSubType (_makeArrayType T_int) (_makeArrayType T_java_lang_Exception))))
(assert (not (jmlSubType JMLT_int JMLT_java_lang_Exception)))
(assert (not (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_java_lang_Exception))))
(assert (javaSubType T_int T_int))
(assert (javaSubType (_makeArrayType T_int) (_makeArrayType T_int)))
(assert (jmlSubType JMLT_int JMLT_int))
(assert (jmlSubType (_makeJMLArrayType JMLT_int) (_makeJMLArrayType JMLT_int)))
(assert (forall ((t1 REF) (t2 REF) (t3 REF) ) (=> (and (javaSubType t1 t2) (javaSubType t2 t3)) (javaSubType t1 t3))))
(assert (forall ((t1 JMLTypeSort) (t2 JMLTypeSort) (t3 JMLTypeSort) ) (=> (and (jmlSubType t1 t2) (jmlSubType t2 t3)) (jmlSubType t1 t3))))
(assert (distinct T_java_lang_Integer T_java_lang_Object T_java_lang_Class T_java_lang_String T_java_lang_RuntimeException T_java_lang_Exception T_int))
(assert (distinct (_JMLT_0 T_java_lang_Integer) (_JMLT_0 T_java_lang_String) (_JMLT_0 T_java_lang_Exception) (_JMLT_0 T_java_lang_Object) (_JMLT_0 T_java_lang_RuntimeException) (_JMLT_1 T_java_lang_Class JMLT_java_lang_Integer) (_JMLT_0 T_int)))
(declare-fun |CumFreq_`alloc___31_0___4| () (Array REF Int))
(declare-fun |java.lang.Object___owner_1586_0___5| () (Array REF REF))
(declare-fun |CumFreq_`isalloc___31_0___6| () (Array REF Bool))
(declare-fun |java.lang.Integer_MAX_VALUE| () Int)
(declare-fun |java.lang.Object_theString_8057_0___7| () (Array REF REF))
(declare-fun |CumFreq__heap___0_0___8| () Int)
(declare-fun |java.lang.Integer_MIN_VALUE| () Int)
(declare-fun |java.lang.Integer_MAX_UNSIGNED_INT| () Int)
(declare-fun |java.lang.Integer_SIZE| () Int)
(declare-fun |java.lang.Integer_BYTES| () Int)
(declare-fun |java.lang.Integer_TYPE| () REF)
(declare-fun |arr_0_0___9| () REF)
(declare-fun |low_0_0___10| () Int)
(declare-fun |high_0_0___11| () Int)
(declare-fun |`exception_435_435___12| () REF)
(declare-fun |`terminationPosition_435_435___13| () Int)
(declare-fun |arr_443_443___14| () REF)
(declare-fun |low_452_452___15| () Int)
(declare-fun |high_461_461___16| () Int)
(declare-fun |`result_435_435___17| () Int)
(declare-fun |cumArr_478_478___18| () REF)
(declare-fun |Array_length| () (Array REF Int))
(declare-fun |j_675_675___19| () Int)
(declare-fun |BL_0_afterIf_3_source| () Int)
(declare-fun |BL_0_afterIf_6_source| () Int)
(declare-fun |BL_0_afterIf_9_source| () Int)
(declare-fun |BL_0_afterIf_12_source| () Int)
(declare-fun |ASSERT_61| () Bool)
(declare-fun |BL_0_afterIf_15_source| () Int)
(declare-fun |Pre_2_300_198___20| () Bool)
(declare-fun |ASSERT_65| () Bool)
(declare-fun |BL_0_afterIf_18_source| () Int)
(declare-fun |ASSERT_67| () Bool)
(declare-fun |ASSERT_68| () Bool)
(declare-fun |CumFreq_`isalloc___31_487___21| () (Array REF Bool))
(declare-fun |CumFreq__heap___0_487___22| () Int)
(declare-fun arrays_INT_0 () (Array REF (Array Int Int)))
(declare-fun |ASSERT_75| () Bool)
(declare-fun |cumArr_478_478___23| () REF)
(declare-fun |ASSERT_81| () Bool)
(declare-fun |ASSERT_82| () Bool)
(declare-fun |ASSERT_83| () Bool)
(declare-fun |ASSERT_84| () Bool)
(declare-fun |ASSERT_85| () Bool)
(declare-fun |BL_0_afterIf_29_source| () Int)
(declare-fun |ASSERT_86| () Bool)
(declare-fun |ASSERT_87| () Bool)
(declare-fun |ASSERT_88| () Bool)
(declare-fun |ASSERT_89| () Bool)
(declare-fun |BL_0_afterIf_32_source| () Int)
(declare-fun arrays_INT_0_517___24 () (Array REF (Array Int Int)))
(declare-fun |CumFreq__heap___0_435___25| () Int)
(declare-fun |j_675_675___26| () Int)
(declare-fun |index_666_27_666_666___27| () Int)
(declare-fun |ASSERT_91| () Bool)
(declare-fun |ASSERT_92| () Bool)
(declare-fun |ASSERT_93| () Bool)
(declare-fun |ASSERT_94| () Bool)
(declare-fun |ASSERT_95| () Bool)
(declare-fun |ASSERT_96| () Bool)
(declare-fun |index_666_27_666_705___28| () Int)
(declare-fun |j_675_700___29| () Int)
(declare-fun arrays_INT_0_828___30 () (Array REF (Array Int Int)))
(declare-fun |index_666_27_666_705___31| () Int)
(declare-fun |CumFreq__heap___0_435___32| () Int)
(declare-fun |ASSERT_102| () Bool)
(declare-fun |ASSERT_103| () Bool)
(declare-fun |ASSERT_104| () Bool)
(declare-fun |ASSERT_107| () Bool)
(declare-fun |ASSERT_109| () Bool)
(declare-fun |ASSERT_110| () Bool)
(declare-fun |ASSERT_111| () Bool)
(declare-fun |ASSERT_112| () Bool)
(declare-fun |ASSERT_113| () Bool)
(declare-fun |ASSERT_114| () Bool)
(declare-fun |ASSERT_115| () Bool)
(declare-fun |ASSERT_116| () Bool)
(declare-fun |ASSERT_117| () Bool)
(declare-fun |ASSERT_119| () Bool)
(declare-fun |ASSERT_120| () Bool)
(declare-fun |ASSERT_122| () Bool)
(declare-fun |ASSERT_123| () Bool)
(declare-fun |ASSERT_124| () Bool)
(declare-fun |ASSERT_125| () Bool)
(declare-fun |ASSERT_126| () Bool)
(declare-fun |ASSERT_127| () Bool)
(declare-fun |BL_0_afterIf_45_source| () Int)
(declare-fun |ASSERT_128| () Bool)
(declare-fun |ASSERT_130| () Bool)
(declare-fun |ASSERT_131| () Bool)
(declare-fun |ASSERT_132| () Bool)
(declare-fun |ASSERT_133| () Bool)
(declare-fun |ASSERT_134| () Bool)
(declare-fun |ASSERT_135| () Bool)
(declare-fun |BL_0_afterIf_48_source| () Int)
(declare-fun |ASSERT_136| () Bool)
(declare-fun |ASSERT_137| () Bool)
(declare-fun |ASSERT_138| () Bool)
(declare-fun |ASSERT_139| () Bool)
(declare-fun |ASSERT_140| () Bool)
(declare-fun |BL_0_afterIf_51_source| () Int)
(declare-fun |ASSERT_143| () Bool)
(declare-fun |ASSERT_144| () Bool)
(declare-fun arrays_INT_0_828___33 () (Array REF (Array Int Int)))
(declare-fun |CumFreq__heap___0_435___34| () Int)
(declare-fun |ASSERT_146| () Bool)
(declare-fun |ASSERT_147| () Bool)
(declare-fun |j_675_700___35| () Int)
(declare-fun |index_666_27_666_666___36| () Int)
(declare-fun |ASSERT_148| () Bool)
(declare-fun |ASSERT_149| () Bool)
(declare-fun |ASSERT_150| () Bool)
(declare-fun |ASSERT_151| () Bool)
(declare-fun |ASSERT_152| () Bool)
(declare-fun |ASSERT_153| () Bool)
(declare-fun |BL_666_LoopAfter_39_source| () Int)
(declare-fun |ASSERT_154| () Bool)
(declare-fun |ASSERT_155| () Bool)
(declare-fun |ASSERT_156| () Bool)
(declare-fun |ASSERT_157| () Bool)
(declare-fun |ASSERT_158| () Bool)
(declare-fun |ASSERT_159| () Bool)
(declare-fun |ASSERT_161| () Bool)
(declare-fun |ASSERT_162| () Bool)
(declare-fun |ASSERT_163| () Bool)
(declare-fun |ASSERT_164| () Bool)
(declare-fun |ASSERT_165| () Bool)
(declare-fun |ASSERT_166| () Bool)
(declare-fun |BL_0_afterIf_54_source| () Int)
(declare-fun |ASSERT_167| () Bool)
(declare-fun |ASSERT_168| () Bool)
(declare-fun |ASSERT_169| () Bool)
(declare-fun |ASSERT_170| () Bool)
(declare-fun |ASSERT_171| () Bool)
(declare-fun |BL_0_afterIf_57_source| () Int)
(declare-fun |ASSERT_174| () Bool)
(declare-fun |ASSERT_175| () Bool)
(declare-fun |`result_435_986___37| () Int)
(declare-fun |`terminationPosition_435_986___38| () Int)
(declare-fun |`exception_435_986___39| () REF)
(declare-fun |BL_435_finally_24_source| () Int)
(declare-fun |__JMLsavedException_435_435_435___40| () REF)
(declare-fun |__JMLsavedTermination_435_435_435___41| () Int)
(declare-fun |ASSERT_176| () Bool)
(declare-fun |ASSERT_177| () Bool)
(declare-fun |BL_0_afterIf_64_source| () Int)
(declare-fun |ASSERT_178| () Bool)
(declare-fun |BL_0_afterIf_61_source| () Int)
(declare-fun |`exception_435_435___42| () REF)
(declare-fun |`terminationPosition_435_435___43| () Int)
(declare-fun |BL_435_AfterTry_22_source| () Int)
(declare-fun BL_435Start_1 () Bool)
(declare-fun BL_467bodyBegin_2 () Bool)
(declare-fun BL_0_then_4 () Bool)
(declare-fun BL_0_else_5 () Bool)
(declare-fun BL_0_afterIf_3 () Bool)
(declare-fun BL_0_then_7 () Bool)
(declare-fun BL_0_else_8 () Bool)
(declare-fun BL_0_afterIf_6 () Bool)
(declare-fun BL_0_then_10 () Bool)
(declare-fun BL_0_else_11 () Bool)
(declare-fun BL_0_afterIf_9 () Bool)
(declare-fun BL_0_then_13 () Bool)
(declare-fun BL_0_else_14 () Bool)
(declare-fun BL_0_afterIf_12 () Bool)
(declare-fun BL_0_then_16 () Bool)
(declare-fun BL_0_else_17 () Bool)
(declare-fun BL_0_afterIf_15 () Bool)
(declare-fun BL_0_then_19 () Bool)
(declare-fun BL_0_else_20 () Bool)
(declare-fun BL_0_afterIf_18 () Bool)
(declare-fun BL_435_AfterLabel_21 () Bool)
(declare-fun BL_0_then_30 () Bool)
(declare-fun BL_0_else_31 () Bool)
(declare-fun BL_0_afterIf_29 () Bool)
(declare-fun BL_0_then_33 () Bool)
(declare-fun BL_0_else_34 () Bool)
(declare-fun BL_0_afterIf_32 () Bool)
(declare-fun BL_705_AfterLabel_35 () Bool)
(declare-fun BL_666_LoopBody_36 () Bool)
(declare-fun BL_705_AfterLabel_40 () Bool)
(declare-fun BL_0_then_42 () Bool)
(declare-fun BL_0_else_43 () Bool)
(declare-fun BL_0_afterIf_41 () Bool)
(declare-fun BL_0_then_46 () Bool)
(declare-fun BL_0_else_47 () Bool)
(declare-fun BL_0_afterIf_45 () Bool)
(declare-fun BL_0_then_49 () Bool)
(declare-fun BL_0_else_50 () Bool)
(declare-fun BL_0_afterIf_48 () Bool)
(declare-fun BL_0_then_52 () Bool)
(declare-fun BL_0_else_53 () Bool)
(declare-fun BL_0_afterIf_51 () Bool)
(declare-fun BL_705_AfterLabel_44 () Bool)
(declare-fun BL_666_LoopContinue_37 () Bool)
(declare-fun BL_666_LoopEnd_38 () Bool)
(declare-fun BL_666_LoopAfter_39 () Bool)
(declare-fun BL_0_then_55 () Bool)
(declare-fun BL_0_else_56 () Bool)
(declare-fun BL_0_afterIf_54 () Bool)
(declare-fun BL_0_then_58 () Bool)
(declare-fun BL_0_else_59 () Bool)
(declare-fun BL_0_afterIf_57 () Bool)
(declare-fun BL_986_return_60 () Bool)
(declare-fun BL_435tryTarget_23 () Bool)
(declare-fun BL_435noException_25 () Bool)
(declare-fun BL_435nocatch_26 () Bool)
(declare-fun BL_435_finally_24 () Bool)
(declare-fun BL_0_then_62 () Bool)
(declare-fun BL_0_then_65 () Bool)
(declare-fun BL_0_else_66 () Bool)
(declare-fun BL_0_afterIf_64 () Bool)
(declare-fun BL_0_else_63 () Bool)
(declare-fun BL_0_afterIf_61 () Bool)
(declare-fun BL_435finallyNormal_27 () Bool)
(declare-fun BL_435finallyExit_28 () Bool)
(declare-fun BL_435_AfterTry_22 () Bool)
(assert (= BL_435Start_1 BL_467bodyBegin_2))
(declare-fun |__JML_AssumeCheck_| () Int)
(define-fun |_JML__tmp4| () REF |java.lang.Integer_TYPE|)
(define-fun |_JML__tmp5| () Bool (= |java.lang.Integer_TYPE| T_int))
(define-fun BL_467bodyBegin_2__A1 () Bool (= |`exception_435_435___12| NULL))
(define-fun BL_467bodyBegin_2__A2 () Bool (= |`terminationPosition_435_435___13| 0))
(define-fun BL_467bodyBegin_2__A3 () Bool (= |java.lang.Integer_MIN_VALUE| (- 2147483648)))
(define-fun BL_467bodyBegin_2__A4 () Bool (= |java.lang.Integer_MAX_VALUE| 2147483647))
(define-fun BL_467bodyBegin_2__A5 () Bool (= |java.lang.Integer_MAX_UNSIGNED_INT| 4294967295))
(define-fun BL_467bodyBegin_2__A6 () Bool (= |java.lang.Integer_SIZE| 32))
(define-fun BL_467bodyBegin_2__A7 () Bool (= |java.lang.Integer_BYTES| 4))
(define-fun BL_467bodyBegin_2__A8 () Bool (distinct |cumArr_478_478___18| NULL))
(define-fun BL_467bodyBegin_2__A9 () Bool (or (= |cumArr_478_478___18| NULL) (and (and (= (jmlTypeOf |cumArr_478_478___18|) (_makeJMLArrayType JMLT_int)) (jmlSubType (jmlTypeOf |cumArr_478_478___18|) (_makeJMLArrayType JMLT_int))) (= (__arrayElemType (jmlTypeOf |cumArr_478_478___18|)) JMLT_int))))
(define-fun BL_467bodyBegin_2__A10 () Bool (or (not (distinct |cumArr_478_478___18| NULL)) (<= 0 (select __JMLlength |cumArr_478_478___18|))))
(define-fun BL_467bodyBegin_2__A11 () Bool (or (not (distinct |cumArr_478_478___18| NULL)) (<= (select __JMLlength |cumArr_478_478___18|) 2147483647)))
(define-fun BL_467bodyBegin_2__A12 () Bool (and (<= (- 2147483648) |j_675_675___19|) (<= |j_675_675___19| 2147483647)))
(define-fun BL_467bodyBegin_2__A13 () Bool |_JML__tmp5|)
(define-fun BL_467bodyBegin_2__A14 () Bool (distinct |arr_443_443___14| NULL))
(define-fun BL_467bodyBegin_2__A15 () Bool (<= (select |CumFreq_`alloc___31_0___4| |arr_443_443___14|) 0))
(define-fun BL_467bodyBegin_2__A16 () Bool (or (= |arr_443_443___14| NULL) (and (and (= (jmlTypeOf |arr_443_443___14|) (_makeJMLArrayType JMLT_int)) (jmlSubType (jmlTypeOf |arr_443_443___14|) (_makeJMLArrayType JMLT_int))) (= (__arrayElemType (jmlTypeOf |arr_443_443___14|)) JMLT_int))))
(define-fun BL_467bodyBegin_2__A17 () Bool (or (not (distinct |arr_443_443___14| NULL)) (<= 0 (select __JMLlength |arr_443_443___14|))))
(define-fun BL_467bodyBegin_2__A18 () Bool (or (not (distinct |arr_443_443___14| NULL)) (<= (select __JMLlength |arr_443_443___14|) 2147483647)))
(define-fun BL_467bodyBegin_2__A19 () Bool (and (<= (- 2147483648) |low_452_452___15|) (<= |low_452_452___15| 2147483647)))
(define-fun BL_467bodyBegin_2__A20 () Bool (and (<= (- 2147483648) |high_461_461___16|) (<= |high_461_461___16| 2147483647)))
(assert (= BL_467bodyBegin_2 (=> BL_467bodyBegin_2__A1 (=> BL_467bodyBegin_2__A2 (=> BL_467bodyBegin_2__A3 (=> BL_467bodyBegin_2__A4 (=> BL_467bodyBegin_2__A5 (=> BL_467bodyBegin_2__A6 (=> BL_467bodyBegin_2__A7 (=> BL_467bodyBegin_2__A8 (=> BL_467bodyBegin_2__A9 (=> BL_467bodyBegin_2__A10 (=> BL_467bodyBegin_2__A11 (=> BL_467bodyBegin_2__A12 (=> BL_467bodyBegin_2__A13 (=> BL_467bodyBegin_2__A14 (=> BL_467bodyBegin_2__A15 (=> BL_467bodyBegin_2__A16 (=> BL_467bodyBegin_2__A17 (=> BL_467bodyBegin_2__A18 (=> BL_467bodyBegin_2__A19 (=> BL_467bodyBegin_2__A20 (and BL_0_then_4 BL_0_else_5)))))))))))))))))))))))
(define-fun BL_0_then_4__A1 () Bool (distinct |arr_443_443___14| NULL))
(define-fun BL_0_then_4__A2 () Bool (or (= (select |java.lang.Object___owner_1586_0___5| |arr_443_443___14|) NULL) (and (and (distinct (select |java.lang.Object___owner_1586_0___5| |arr_443_443___14|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object___owner_1586_0___5| |arr_443_443___14|)) T_java_lang_Object)) (jmlSubType (jmlTypeOf (select |java.lang.Object___owner_1586_0___5| |arr_443_443___14|)) JMLT_java_lang_Object))))
(define-fun BL_0_then_4__A3 () Bool (distinct (select |java.lang.Object_theString_8057_0___7| |arr_443_443___14|) NULL))
(define-fun BL_0_then_4__A4 () Bool (or (= (select |java.lang.Object_theString_8057_0___7| |arr_443_443___14|) NULL) (and (and (distinct (select |java.lang.Object_theString_8057_0___7| |arr_443_443___14|) NULL) (javaSubType (javaTypeOf (select |java.lang.Object_theString_8057_0___7| |arr_443_443___14|)) T_java_lang_String)) (jmlSubType (jmlTypeOf (select |java.lang.Object_theString_8057_0___7| |arr_443_443___14|)) JMLT_java_lang_String))))
(define-fun BL_0_then_4__A5 () Bool (= |BL_0_afterIf_3_source| 4))
(assert (= BL_0_then_4 (=> BL_0_then_4__A1 (=> BL_0_then_4__A2 (=> BL_0_then_4__A3 (=> BL_0_then_4__A4 (=> BL_0_then_4__A5 BL_0_afterIf_3)))))))
(define-fun BL_0_else_5__A1 () Bool (not (distinct |arr_443_443___14| NULL)))
(define-fun BL_0_else_5__A2 () Bool (= |BL_0_afterIf_3_source| 5))
(assert (= BL_0_else_5 (=> BL_0_else_5__A1 (=> BL_0_else_5__A2 BL_0_afterIf_3))))
(declare-fun |_JML__tmp6| () Bool)
(define-fun |_JML__tmp7| () Bool (distinct |arr_443_443___14| NULL))
(declare-fun |_JML__tmp8| () Bool)
(define-fun BL_0_afterIf_3__A1 () Bool (= |_JML__tmp6| |_JML__tmp7|))
(assert (= BL_0_afterIf_3 (=> BL_0_afterIf_3__A1 (and BL_0_then_7 BL_0_else_8))))
(define-fun |_JML__tmp9| () Bool (and (< 0 |low_452_452___15|) (< |low_452_452___15| 100)))
(define-fun BL_0_then_7__A1 () Bool |_JML__tmp6|)
(define-fun BL_0_then_7__A2 () Bool (= |_JML__tmp8| |_JML__tmp9|))
(define-fun BL_0_then_7__A3 () Bool (= |BL_0_afterIf_6_source| 7))
(assert (= BL_0_then_7 (=> BL_0_then_7__A1 (=> BL_0_then_7__A2 (=> BL_0_then_7__A3 BL_0_afterIf_6)))))
(define-fun BL_0_else_8__A1 () Bool (not |_JML__tmp6|))
(define-fun BL_0_else_8__A2 () Bool (= |_JML__tmp8| false))
(define-fun BL_0_else_8__A3 () Bool (= |BL_0_afterIf_6_source| 8))
(assert (= BL_0_else_8 (=> BL_0_else_8__A1 (=> BL_0_else_8__A2 (=> BL_0_else_8__A3 BL_0_afterIf_6)))))
(declare-fun |_JML__tmp10| () Bool)
(assert (= BL_0_afterIf_6 (and BL_0_then_10 BL_0_else_11)))
(define-fun |_JML__tmp11| () Bool (and (< 0 |high_461_461___16|) (< |high_461_461___16| 100)))
(define-fun BL_0_then_10__A1 () Bool |_JML__tmp8|)
(define-fun BL_0_then_10__A2 () Bool (= |_JML__tmp10| |_JML__tmp11|))
(define-fun BL_0_then_10__A3 () Bool (= |BL_0_afterIf_9_source| 10))
(assert (= BL_0_then_10 (=> BL_0_then_10__A1 (=> BL_0_then_10__A2 (=> BL_0_then_10__A3 BL_0_afterIf_9)))))
(define-fun BL_0_else_11__A1 () Bool (not |_JML__tmp8|))
(define-fun BL_0_else_11__A2 () Bool (= |_JML__tmp10| false))
(define-fun BL_0_else_11__A3 () Bool (= |BL_0_afterIf_9_source| 11))
(assert (= BL_0_else_11 (=> BL_0_else_11__A1 (=> BL_0_else_11__A2 (=> BL_0_else_11__A3 BL_0_afterIf_9)))))
(declare-fun |_JML__tmp12| () Bool)
(assert (= BL_0_afterIf_9 (and BL_0_then_13 BL_0_else_14)))
(define-fun |_JML__tmp13| () Bool (< |low_452_452___15| |high_461_461___16|))
(define-fun BL_0_then_13__A1 () Bool |_JML__tmp10|)
(define-fun BL_0_then_13__A2 () Bool (= |_JML__tmp12| |_JML__tmp13|))
(define-fun BL_0_then_13__A3 () Bool (= |BL_0_afterIf_12_source| 13))
(assert (= BL_0_then_13 (=> BL_0_then_13__A1 (=> BL_0_then_13__A2 (=> BL_0_then_13__A3 BL_0_afterIf_12)))))
(define-fun BL_0_else_14__A1 () Bool (not |_JML__tmp10|))
(define-fun BL_0_else_14__A2 () Bool (= |_JML__tmp12| false))
(define-fun BL_0_else_14__A3 () Bool (= |BL_0_afterIf_12_source| 14))
(assert (= BL_0_else_14 (=> BL_0_else_14__A1 (=> BL_0_else_14__A2 (=> BL_0_else_14__A3 BL_0_afterIf_12)))))
(declare-fun |_JML__tmp14| () Bool)
(assert (= BL_0_afterIf_12 (and BL_0_then_16 BL_0_else_17)))
(define-fun |_JML__tmp15| () Int (select __JMLlength |arr_443_443___14|))
(define-fun |_JML__tmp16| () Bool (< |high_461_461___16| |_JML__tmp15|))
(define-fun BL_0_then_16__A1 () Bool |_JML__tmp12|)
(define-fun BL_0_then_16__A2 () Bool (and (<= 0 (select __JMLlength |arr_443_443___14|)) (<= (select __JMLlength |arr_443_443___14|) 2147483647)))
(define-fun BL_0_then_16__A3 () Bool (= |ASSERT_61| (or (not (distinct |arr_443_443___14| NULL)) (distinct |arr_443_443___14| NULL))))
(define-fun BL_0_then_16__A4 () Bool (= |_JML__tmp14| |_JML__tmp16|))
(define-fun BL_0_then_16__A5 () Bool (= |BL_0_afterIf_15_source| 16))
(assert (= BL_0_then_16 (=> BL_0_then_16__A1 (=> BL_0_then_16__A2 (=> BL_0_then_16__A3 (and |ASSERT_61| (=> |ASSERT_61| (=> BL_0_then_16__A4 (=> BL_0_then_16__A5 BL_0_afterIf_15)))))))))
(define-fun BL_0_else_17__A1 () Bool (not |_JML__tmp12|))
(define-fun BL_0_else_17__A2 () Bool (= |_JML__tmp14| false))
(define-fun BL_0_else_17__A3 () Bool (= |BL_0_afterIf_15_source| 17))
(assert (= BL_0_else_17 (=> BL_0_else_17__A1 (=> BL_0_else_17__A2 (=> BL_0_else_17__A3 BL_0_afterIf_15)))))
(define-fun BL_0_afterIf_15__A1 () Bool (= |Pre_2_300_198___20| |_JML__tmp14|))
(define-fun BL_0_afterIf_15__A2 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_afterIf_15__A3 () Bool (= |ASSERT_65| (distinct |__JML_AssumeCheck_| 1)))
(assert (= BL_0_afterIf_15 (=> BL_0_afterIf_15__A1 (=> BL_0_afterIf_15__A2 (=> BL_0_afterIf_15__A3 (and |ASSERT_65| (=> |ASSERT_65| (and BL_0_then_19 BL_0_else_20))))))))
(define-fun BL_0_then_19__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_19__A2 () Bool (= |BL_0_afterIf_18_source| 19))
(assert (= BL_0_then_19 (=> BL_0_then_19__A1 (=> BL_0_then_19__A2 BL_0_afterIf_18))))
(define-fun BL_0_else_20__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_20__A2 () Bool (= |BL_0_afterIf_18_source| 20))
(assert (= BL_0_else_20 (=> BL_0_else_20__A1 (=> BL_0_else_20__A2 BL_0_afterIf_18))))
(assert (= BL_0_afterIf_18 BL_435_AfterLabel_21))
(define-fun |_JML__tmp17| () Int (select __JMLlength |arr_443_443___14|))
(declare-fun |`NEWARRAY_487_18_487| () REF)
(define-fun BL_435_AfterLabel_21__A1 () Bool (and (<= 0 (select __JMLlength |arr_443_443___14|)) (<= (select __JMLlength |arr_443_443___14|) 2147483647)))
(define-fun BL_435_AfterLabel_21__A2 () Bool (= |ASSERT_67| (distinct |arr_443_443___14| NULL)))
(define-fun BL_435_AfterLabel_21__A3 () Bool (= |ASSERT_68| (<= 0 |_JML__tmp17|)))
(define-fun BL_435_AfterLabel_21__A4 () Bool (distinct |`NEWARRAY_487_18_487| NULL))
(define-fun BL_435_AfterLabel_21__A5 () Bool (not (select |CumFreq_`isalloc___31_0___6| |`NEWARRAY_487_18_487|)))
(define-fun BL_435_AfterLabel_21__A6 () Bool (= |CumFreq_`isalloc___31_487___21| (store |CumFreq_`isalloc___31_0___6| |`NEWARRAY_487_18_487| true)))
(define-fun BL_435_AfterLabel_21__A7 () Bool (= (select __JMLlength |`NEWARRAY_487_18_487|) |_JML__tmp17|))
(define-fun BL_435_AfterLabel_21__A8 () Bool (or (= |`NEWARRAY_487_18_487| NULL) (and (and (= (jmlTypeOf |`NEWARRAY_487_18_487|) (_makeJMLArrayType JMLT_int)) (jmlSubType (jmlTypeOf |`NEWARRAY_487_18_487|) (_makeJMLArrayType JMLT_int))) (= (__arrayElemType (jmlTypeOf |`NEWARRAY_487_18_487|)) JMLT_int))))
(define-fun BL_435_AfterLabel_21__A9 () Bool (or (= |`NEWARRAY_487_18_487| NULL) (= (select |CumFreq_`alloc___31_0___4| |`NEWARRAY_487_18_487|) 1)))
(define-fun BL_435_AfterLabel_21__A10 () Bool (forall ((|i0| Int) ) (=> (and (<= 0 |i0|) (< |i0| |_JML__tmp17|)) (= (select (select arrays_INT_0 |`NEWARRAY_487_18_487|) |i0|) 0))))
(define-fun BL_435_AfterLabel_21__A11 () Bool (= |ASSERT_75| (distinct |`NEWARRAY_487_18_487| NULL)))
(define-fun BL_435_AfterLabel_21__A12 () Bool (= |cumArr_478_478___23| |`NEWARRAY_487_18_487|))
(define-fun BL_435_AfterLabel_21__A13 () Bool (or (= |cumArr_478_478___23| NULL) (and (jmlSubType (jmlTypeOf |cumArr_478_478___23|) (_makeJMLArrayType JMLT_int)) (= (__arrayElemType (jmlTypeOf |cumArr_478_478___23|)) JMLT_int))))
(define-fun BL_435_AfterLabel_21__A14 () Bool (= |ASSERT_81| (distinct |cumArr_478_478___23| NULL)))
(define-fun BL_435_AfterLabel_21__A15 () Bool (= |ASSERT_82| (>= 0 0)))
(define-fun BL_435_AfterLabel_21__A16 () Bool (= |ASSERT_83| (> (select __JMLlength |cumArr_478_478___23|) 0)))
(assert (= BL_435_AfterLabel_21 (=> BL_435_AfterLabel_21__A1 (=> BL_435_AfterLabel_21__A2 (and |ASSERT_67| (=> |ASSERT_67| (=> BL_435_AfterLabel_21__A3 (and |ASSERT_68| (=> |ASSERT_68| (=> BL_435_AfterLabel_21__A4 (=> BL_435_AfterLabel_21__A5 (=> BL_435_AfterLabel_21__A6 (=> BL_435_AfterLabel_21__A7 (=> BL_435_AfterLabel_21__A8 (=> BL_435_AfterLabel_21__A9 (=> BL_435_AfterLabel_21__A10 (=> BL_435_AfterLabel_21__A11 (and |ASSERT_75| (=> |ASSERT_75| (=> BL_435_AfterLabel_21__A12 (=> BL_435_AfterLabel_21__A13 (=> BL_435_AfterLabel_21__A14 (and |ASSERT_81| (=> |ASSERT_81| (=> BL_435_AfterLabel_21__A15 (and |ASSERT_82| (=> |ASSERT_82| (=> BL_435_AfterLabel_21__A16 (and |ASSERT_83| (=> |ASSERT_83| (and BL_0_then_30 BL_0_else_31)))))))))))))))))))))))))))))))
(define-fun |_JML__tmp19| () Int (select |CumFreq_`alloc___31_0___4| |cumArr_478_478___23|))
(define-fun |_JML__tmp20| () Bool (> |_JML__tmp19| 0))
(declare-fun |_JML__tmp21| () Bool)
(define-fun BL_0_then_30__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_30__A2 () Bool (= |ASSERT_84| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_then_30__A3 () Bool (= |ASSERT_85| (or |_JML__tmp21| (or |_JML__tmp20| true))))
(define-fun BL_0_then_30__A4 () Bool (= |BL_0_afterIf_29_source| 30))
(assert (= BL_0_then_30 (=> BL_0_then_30__A1 (=> BL_0_then_30__A2 (and |ASSERT_84| (=> |ASSERT_84| (=> BL_0_then_30__A3 (and |ASSERT_85| (=> |ASSERT_85| (=> BL_0_then_30__A4 BL_0_afterIf_29))))))))))
(define-fun BL_0_else_31__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_31__A2 () Bool (= |BL_0_afterIf_29_source| 31))
(assert (= BL_0_else_31 (=> BL_0_else_31__A1 (=> BL_0_else_31__A2 BL_0_afterIf_29))))
(define-fun |_JML__tmp22| () Int (select (select arrays_INT_0 |arr_443_443___14|) 0))
(define-fun BL_0_afterIf_29__A1 () Bool (= |ASSERT_86| (distinct |arr_443_443___14| NULL)))
(define-fun BL_0_afterIf_29__A2 () Bool (= |ASSERT_87| (> (select __JMLlength |arr_443_443___14|) 0)))
(assert (= BL_0_afterIf_29 (=> BL_0_afterIf_29__A1 (and |ASSERT_86| (=> |ASSERT_86| (=> BL_0_afterIf_29__A2 (and |ASSERT_87| (=> |ASSERT_87| (and BL_0_then_33 BL_0_else_34)))))))))
(define-fun |_JML__tmp23| () Int (select |CumFreq_`alloc___31_0___4| |arr_443_443___14|))
(define-fun |_JML__tmp24| () Bool (> |_JML__tmp23| 0))
(declare-fun |_JML__tmp25| () Bool)
(define-fun BL_0_then_33__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_33__A2 () Bool (= |ASSERT_88| (or (not (distinct |arr_443_443___14| NULL)) (distinct |arr_443_443___14| NULL))))
(define-fun BL_0_then_33__A3 () Bool (= |ASSERT_89| (or |_JML__tmp25| (or |_JML__tmp24| true))))
(define-fun BL_0_then_33__A4 () Bool (= |BL_0_afterIf_32_source| 33))
(assert (= BL_0_then_33 (=> BL_0_then_33__A1 (=> BL_0_then_33__A2 (and |ASSERT_88| (=> |ASSERT_88| (=> BL_0_then_33__A3 (and |ASSERT_89| (=> |ASSERT_89| (=> BL_0_then_33__A4 BL_0_afterIf_32))))))))))
(define-fun BL_0_else_34__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_34__A2 () Bool (= |BL_0_afterIf_32_source| 34))
(assert (= BL_0_else_34 (=> BL_0_else_34__A1 (=> BL_0_else_34__A2 BL_0_afterIf_32))))
(define-fun |_JML__tmp26| () Int (select (select arrays_INT_0_517___24 |cumArr_478_478___23|) 0))
(define-fun BL_0_afterIf_32__A1 () Bool (= arrays_INT_0_517___24 (store arrays_INT_0 |cumArr_478_478___23| (store (select arrays_INT_0 |cumArr_478_478___23|) 0 |_JML__tmp22|))))
(define-fun BL_0_afterIf_32__A2 () Bool (= |CumFreq__heap___0_435___25| 3))
(define-fun BL_0_afterIf_32__A3 () Bool (= |j_675_675___26| 0))
(define-fun BL_0_afterIf_32__A4 () Bool (= |index_666_27_666_666___27| 0))
(assert (= BL_0_afterIf_32 (=> BL_0_afterIf_32__A1 (=> BL_0_afterIf_32__A2 (=> BL_0_afterIf_32__A3 (=> BL_0_afterIf_32__A4 BL_705_AfterLabel_35))))))
(define-fun |_JML__tmp28| () Bool (and (<= 0 |j_675_675___26|) (< |j_675_675___26| |high_461_461___16|)))
(define-fun-rec sum_0 ((lo Int)(|i| Int)) Int (ite (< |i| lo) 0 (+ (sum_0 lo (- |i| 1)) (ite (and (<= 0 |i|) (<= |i| |j_675_675___26|)) (select (select arrays_INT_0_517___24 |arr_443_443___14|) |i|) 0))))
(declare-fun |_JML__tmp30| () Int)
(assert (= |_JML__tmp30| (sum_0 0 1000)))
(define-fun |_JML__tmp31| () Bool (= (select (select arrays_INT_0_517___24 |cumArr_478_478___23|) |j_675_675___26|) |_JML__tmp30|))
(define-fun BL_705_AfterLabel_35__A1 () Bool (= |ASSERT_91| |_JML__tmp28|))
(define-fun BL_705_AfterLabel_35__A2 () Bool (= |ASSERT_92| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_705_AfterLabel_35__A3 () Bool (= |ASSERT_93| (or (not (distinct |cumArr_478_478___23| NULL)) (<= 0 |j_675_675___26|))))
(define-fun BL_705_AfterLabel_35__A4 () Bool (= |ASSERT_94| (or (not (distinct |cumArr_478_478___23| NULL)) (> (select __JMLlength |cumArr_478_478___23|) |j_675_675___26|))))
(define-fun BL_705_AfterLabel_35__A5 () Bool (= |ASSERT_95| |_JML__tmp31|))
(assert (= BL_705_AfterLabel_35 (=> BL_705_AfterLabel_35__A1 (and |ASSERT_91| (=> |ASSERT_91| (=> BL_705_AfterLabel_35__A2 (and |ASSERT_92| (=> |ASSERT_92| (=> BL_705_AfterLabel_35__A3 (and |ASSERT_93| (=> |ASSERT_93| (=> BL_705_AfterLabel_35__A4 (and |ASSERT_94| (=> |ASSERT_94| (=> BL_705_AfterLabel_35__A5 (and |ASSERT_95| (=> |ASSERT_95| (and BL_666_LoopBody_36 BL_666_LoopEnd_38))))))))))))))))))
(define-fun BL_666_LoopBody_36__A1 () Bool true)
(define-fun BL_666_LoopBody_36__A2 () Bool (= |ASSERT_96| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_666_LoopBody_36__A3 () Bool (= arrays_INT_0_828___30 (store arrays_INT_0_517___24 |cumArr_478_478___23| (select arrays_INT_0_828___30 |cumArr_478_478___23|))))
(define-fun BL_666_LoopBody_36__A4 () Bool (and (<= (- 2147483648) |index_666_27_666_705___31|) (<= |index_666_27_666_705___31| 2147483647)))
(define-fun BL_666_LoopBody_36__A5 () Bool (and (<= (- 2147483648) |j_675_700___29|) (<= |j_675_700___29| 2147483647)))
(define-fun BL_666_LoopBody_36__A6 () Bool (and (<= (- 2147483648) |index_666_27_666_705___31|) (<= |index_666_27_666_705___31| 2147483647)))
(define-fun BL_666_LoopBody_36__A7 () Bool (= |CumFreq__heap___0_435___32| 4))
(assert (= BL_666_LoopBody_36 (=> BL_666_LoopBody_36__A1 (=> BL_666_LoopBody_36__A2 (and |ASSERT_96| (=> |ASSERT_96| (=> BL_666_LoopBody_36__A3 (=> BL_666_LoopBody_36__A4 (=> BL_666_LoopBody_36__A5 (=> BL_666_LoopBody_36__A6 (=> BL_666_LoopBody_36__A7 BL_705_AfterLabel_40)))))))))))
(define-fun |_JML__tmp32| () Bool (and (<= 0 |j_675_700___29|) (< |j_675_700___29| |high_461_461___16|)))
(define-fun-rec sum_1 ((lo Int)(|i| Int)) Int (ite (< |i| lo) 0 (+ (sum_1 lo (- |i| 1)) (ite (and (<= 0 |i|) (<= |i| |j_675_700___29|)) (select (select arrays_INT_0_828___30 |arr_443_443___14|) |i|) 0))))
(declare-fun |_JML__tmp34| () Int)
(assert (= |_JML__tmp34| (sum_1 0 1000)))
(define-fun |_JML__tmp35| () Bool (= (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |j_675_700___29|) |_JML__tmp34|))
(define-fun |_JML__tmp36| () Int (- |high_461_461___16| |j_675_700___29|))
(define-fun |_JML__tmp37| () Int |_JML__tmp36|)
(define-fun |_JML__tmp38| () Int (select __JMLlength |arr_443_443___14|))
(define-fun |_JML__tmp39| () Bool (or (not (and (< 0 |_JML__tmp38|) (< 1 0))) (<= |_JML__tmp38| (+ 2147483647 1))))
(define-fun |_JML__tmp40| () Bool (or (not (and (< |_JML__tmp38| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp38|)))
(define-fun |_JML__tmp41| () Int (ite (< 2147483647 (- |_JML__tmp38| 1)) (+ (+ (- |_JML__tmp38| 1) (- 2147483648)) (- 2147483648)) (ite (< (- |_JML__tmp38| 1) (- 2147483648)) (- (- (- |_JML__tmp38| 1) (- 2147483648)) (- 2147483648)) (- |_JML__tmp38| 1))))
(define-fun |_JML__tmp42| () Bool (< |j_675_700___29| |_JML__tmp41|))
(define-fun BL_705_AfterLabel_40__A1 () Bool (<= 0 |index_666_27_666_705___31|))
(define-fun BL_705_AfterLabel_40__A2 () Bool |_JML__tmp32|)
(define-fun BL_705_AfterLabel_40__A3 () Bool (= |ASSERT_102| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_705_AfterLabel_40__A4 () Bool (= |ASSERT_103| (or (not (distinct |cumArr_478_478___23| NULL)) (<= 0 |j_675_700___29|))))
(define-fun BL_705_AfterLabel_40__A5 () Bool (= |ASSERT_104| (or (not (distinct |cumArr_478_478___23| NULL)) (> (select __JMLlength |cumArr_478_478___23|) |j_675_700___29|))))
(define-fun BL_705_AfterLabel_40__A6 () Bool |_JML__tmp35|)
(define-fun BL_705_AfterLabel_40__A7 () Bool (and (<= 0 (select __JMLlength |arr_443_443___14|)) (<= (select __JMLlength |arr_443_443___14|) 2147483647)))
(define-fun BL_705_AfterLabel_40__A8 () Bool (= |ASSERT_107| (distinct |arr_443_443___14| NULL)))
(define-fun BL_705_AfterLabel_40__A9 () Bool (and (<= (- 2147483648) |_JML__tmp38|) (<= |_JML__tmp38| 2147483647)))
(define-fun BL_705_AfterLabel_40__A10 () Bool (= |ASSERT_109| (or (not (and (< 0 |_JML__tmp38|) (< 1 0))) (<= |_JML__tmp38| (+ 2147483647 1)))))
(define-fun BL_705_AfterLabel_40__A11 () Bool (= |ASSERT_110| (or (not (and (< |_JML__tmp38| 0) (< 0 1))) (<= (+ (- 2147483648) 1) |_JML__tmp38|))))
(assert (= BL_705_AfterLabel_40 (=> BL_705_AfterLabel_40__A1 (=> BL_705_AfterLabel_40__A2 (=> BL_705_AfterLabel_40__A3 (and |ASSERT_102| (=> |ASSERT_102| (=> BL_705_AfterLabel_40__A4 (and |ASSERT_103| (=> |ASSERT_103| (=> BL_705_AfterLabel_40__A5 (and |ASSERT_104| (=> |ASSERT_104| (=> BL_705_AfterLabel_40__A6 (=> BL_705_AfterLabel_40__A7 (=> BL_705_AfterLabel_40__A8 (and |ASSERT_107| (=> |ASSERT_107| (=> BL_705_AfterLabel_40__A9 (=> BL_705_AfterLabel_40__A10 (and |ASSERT_109| (=> |ASSERT_109| (=> BL_705_AfterLabel_40__A11 (and |ASSERT_110| (=> |ASSERT_110| (and BL_0_then_42 BL_0_else_43))))))))))))))))))))))))))
(define-fun BL_0_then_42__A1 () Bool (not |_JML__tmp42|))
(define-fun BL_0_then_42__A2 () Bool (= |BL_666_LoopAfter_39_source| 42))
(assert (= BL_0_then_42 (=> BL_0_then_42__A1 (=> BL_0_then_42__A2 BL_666_LoopAfter_39))))
(define-fun BL_0_else_43__A1 () Bool (not (not |_JML__tmp42|)))
(assert (= BL_0_else_43 (=> BL_0_else_43__A1 BL_0_afterIf_41)))
(define-fun |_JML__tmp44| () Int (+ |j_675_700___29| 1))
(define-fun |_JML__tmp45| () Int (+ (select (select arrays_INT_0_828___30 |arr_443_443___14|) |_JML__tmp44|) (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |j_675_700___29|)))
(define-fun |_JML__tmp46| () Bool (and (<= |java.lang.Integer_MIN_VALUE| |_JML__tmp45|) (<= |_JML__tmp45| |java.lang.Integer_MAX_VALUE|)))
(define-fun |_JML__tmp47| () Bool (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1))))
(define-fun |_JML__tmp48| () Bool (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|)))
(define-fun |_JML__tmp49| () Int (ite (< 2147483647 (+ |j_675_700___29| 1)) (+ (+ (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (ite (< (+ |j_675_700___29| 1) (- 2147483648)) (- (- (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (+ |j_675_700___29| 1))))
(define-fun BL_0_afterIf_41__A1 () Bool (= |ASSERT_111| (<= 0 |_JML__tmp37|)))
(define-fun BL_0_afterIf_41__A2 () Bool (= |ASSERT_112| (or (not (distinct |arr_443_443___14| NULL)) (distinct |arr_443_443___14| NULL))))
(define-fun BL_0_afterIf_41__A3 () Bool (= |ASSERT_113| (or (not (distinct |arr_443_443___14| NULL)) (<= 0 |_JML__tmp44|))))
(define-fun BL_0_afterIf_41__A4 () Bool (= |ASSERT_114| (or (not (distinct |arr_443_443___14| NULL)) (> (select __JMLlength |arr_443_443___14|) |_JML__tmp44|))))
(define-fun BL_0_afterIf_41__A5 () Bool (= |ASSERT_115| (or (not (and (distinct |arr_443_443___14| NULL) (distinct |cumArr_478_478___23| NULL))) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_afterIf_41__A6 () Bool (= |ASSERT_116| (or (not (and (distinct |arr_443_443___14| NULL) (distinct |cumArr_478_478___23| NULL))) (<= 0 |j_675_700___29|))))
(define-fun BL_0_afterIf_41__A7 () Bool (= |ASSERT_117| (or (not (and (distinct |arr_443_443___14| NULL) (distinct |cumArr_478_478___23| NULL))) (> (select __JMLlength |cumArr_478_478___23|) |j_675_700___29|))))
(define-fun BL_0_afterIf_41__A8 () Bool |_JML__tmp46|)
(define-fun BL_0_afterIf_41__A9 () Bool (= |ASSERT_119| (distinct |__JML_AssumeCheck_| 2)))
(define-fun BL_0_afterIf_41__A10 () Bool (= |ASSERT_120| (distinct |cumArr_478_478___23| NULL)))
(define-fun BL_0_afterIf_41__A11 () Bool (and (<= (- 2147483648) |j_675_700___29|) (<= |j_675_700___29| 2147483647)))
(define-fun BL_0_afterIf_41__A12 () Bool (= |ASSERT_122| (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1)))))
(define-fun BL_0_afterIf_41__A13 () Bool (= |ASSERT_123| (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|))))
(define-fun BL_0_afterIf_41__A14 () Bool (= |ASSERT_124| (>= |_JML__tmp49| 0)))
(define-fun BL_0_afterIf_41__A15 () Bool (= |ASSERT_125| (> (select __JMLlength |cumArr_478_478___23|) |_JML__tmp49|)))
(assert (= BL_0_afterIf_41 (=> BL_0_afterIf_41__A1 (and |ASSERT_111| (=> |ASSERT_111| (=> BL_0_afterIf_41__A2 (and |ASSERT_112| (=> |ASSERT_112| (=> BL_0_afterIf_41__A3 (and |ASSERT_113| (=> |ASSERT_113| (=> BL_0_afterIf_41__A4 (and |ASSERT_114| (=> |ASSERT_114| (=> BL_0_afterIf_41__A5 (and |ASSERT_115| (=> |ASSERT_115| (=> BL_0_afterIf_41__A6 (and |ASSERT_116| (=> |ASSERT_116| (=> BL_0_afterIf_41__A7 (and |ASSERT_117| (=> |ASSERT_117| (=> BL_0_afterIf_41__A8 (=> BL_0_afterIf_41__A9 (and |ASSERT_119| (=> |ASSERT_119| (=> BL_0_afterIf_41__A10 (and |ASSERT_120| (=> |ASSERT_120| (=> BL_0_afterIf_41__A11 (=> BL_0_afterIf_41__A12 (and |ASSERT_122| (=> |ASSERT_122| (=> BL_0_afterIf_41__A13 (and |ASSERT_123| (=> |ASSERT_123| (=> BL_0_afterIf_41__A14 (and |ASSERT_124| (=> |ASSERT_124| (=> BL_0_afterIf_41__A15 (and |ASSERT_125| (=> |ASSERT_125| (and BL_0_then_46 BL_0_else_47))))))))))))))))))))))))))))))))))))))))))))
(define-fun |_JML__tmp50| () Int (select |CumFreq_`alloc___31_0___4| |cumArr_478_478___23|))
(define-fun |_JML__tmp51| () Bool (> |_JML__tmp50| 0))
(declare-fun |_JML__tmp52| () Bool)
(define-fun BL_0_then_46__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_46__A2 () Bool (= |ASSERT_126| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_then_46__A3 () Bool (= |ASSERT_127| (or |_JML__tmp52| (or |_JML__tmp51| true))))
(define-fun BL_0_then_46__A4 () Bool (= |BL_0_afterIf_45_source| 46))
(assert (= BL_0_then_46 (=> BL_0_then_46__A1 (=> BL_0_then_46__A2 (and |ASSERT_126| (=> |ASSERT_126| (=> BL_0_then_46__A3 (and |ASSERT_127| (=> |ASSERT_127| (=> BL_0_then_46__A4 BL_0_afterIf_45))))))))))
(define-fun BL_0_else_47__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_47__A2 () Bool (= |BL_0_afterIf_45_source| 47))
(assert (= BL_0_else_47 (=> BL_0_else_47__A1 (=> BL_0_else_47__A2 BL_0_afterIf_45))))
(define-fun |_JML__tmp53| () Bool (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1))))
(define-fun |_JML__tmp54| () Bool (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|)))
(define-fun |_JML__tmp55| () Int (ite (< 2147483647 (+ |j_675_700___29| 1)) (+ (+ (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (ite (< (+ |j_675_700___29| 1) (- 2147483648)) (- (- (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (+ |j_675_700___29| 1))))
(define-fun |_JML__tmp56| () Int (select (select arrays_INT_0_828___30 |arr_443_443___14|) |_JML__tmp55|))
(define-fun BL_0_afterIf_45__A1 () Bool (= |ASSERT_128| (distinct |arr_443_443___14| NULL)))
(define-fun BL_0_afterIf_45__A2 () Bool (and (<= (- 2147483648) |j_675_700___29|) (<= |j_675_700___29| 2147483647)))
(define-fun BL_0_afterIf_45__A3 () Bool (= |ASSERT_130| (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1)))))
(define-fun BL_0_afterIf_45__A4 () Bool (= |ASSERT_131| (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|))))
(define-fun BL_0_afterIf_45__A5 () Bool (= |ASSERT_132| (<= 0 |_JML__tmp55|)))
(define-fun BL_0_afterIf_45__A6 () Bool (= |ASSERT_133| (> (select __JMLlength |arr_443_443___14|) |_JML__tmp55|)))
(assert (= BL_0_afterIf_45 (=> BL_0_afterIf_45__A1 (and |ASSERT_128| (=> |ASSERT_128| (=> BL_0_afterIf_45__A2 (=> BL_0_afterIf_45__A3 (and |ASSERT_130| (=> |ASSERT_130| (=> BL_0_afterIf_45__A4 (and |ASSERT_131| (=> |ASSERT_131| (=> BL_0_afterIf_45__A5 (and |ASSERT_132| (=> |ASSERT_132| (=> BL_0_afterIf_45__A6 (and |ASSERT_133| (=> |ASSERT_133| (and BL_0_then_49 BL_0_else_50)))))))))))))))))))
(define-fun |_JML__tmp57| () Int (select |CumFreq_`alloc___31_0___4| |arr_443_443___14|))
(define-fun |_JML__tmp58| () Bool (> |_JML__tmp57| 0))
(declare-fun |_JML__tmp59| () Bool)
(define-fun BL_0_then_49__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_49__A2 () Bool (= |ASSERT_134| (or (not (distinct |arr_443_443___14| NULL)) (distinct |arr_443_443___14| NULL))))
(define-fun BL_0_then_49__A3 () Bool (= |ASSERT_135| (or |_JML__tmp59| (or |_JML__tmp58| true))))
(define-fun BL_0_then_49__A4 () Bool (= |BL_0_afterIf_48_source| 49))
(assert (= BL_0_then_49 (=> BL_0_then_49__A1 (=> BL_0_then_49__A2 (and |ASSERT_134| (=> |ASSERT_134| (=> BL_0_then_49__A3 (and |ASSERT_135| (=> |ASSERT_135| (=> BL_0_then_49__A4 BL_0_afterIf_48))))))))))
(define-fun BL_0_else_50__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_50__A2 () Bool (= |BL_0_afterIf_48_source| 50))
(assert (= BL_0_else_50 (=> BL_0_else_50__A1 (=> BL_0_else_50__A2 BL_0_afterIf_48))))
(define-fun |_JML__tmp60| () Int (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |j_675_700___29|))
(define-fun BL_0_afterIf_48__A1 () Bool (= |ASSERT_136| (distinct |cumArr_478_478___23| NULL)))
(define-fun BL_0_afterIf_48__A2 () Bool (= |ASSERT_137| (<= 0 |j_675_700___29|)))
(define-fun BL_0_afterIf_48__A3 () Bool (= |ASSERT_138| (> (select __JMLlength |cumArr_478_478___23|) |j_675_700___29|)))
(assert (= BL_0_afterIf_48 (=> BL_0_afterIf_48__A1 (and |ASSERT_136| (=> |ASSERT_136| (=> BL_0_afterIf_48__A2 (and |ASSERT_137| (=> |ASSERT_137| (=> BL_0_afterIf_48__A3 (and |ASSERT_138| (=> |ASSERT_138| (and BL_0_then_52 BL_0_else_53))))))))))))
(define-fun |_JML__tmp61| () Int (select |CumFreq_`alloc___31_0___4| |cumArr_478_478___23|))
(define-fun |_JML__tmp62| () Bool (> |_JML__tmp61| 0))
(declare-fun |_JML__tmp63| () Bool)
(define-fun BL_0_then_52__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_52__A2 () Bool (= |ASSERT_139| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_then_52__A3 () Bool (= |ASSERT_140| (or |_JML__tmp63| (or |_JML__tmp62| true))))
(define-fun BL_0_then_52__A4 () Bool (= |BL_0_afterIf_51_source| 52))
(assert (= BL_0_then_52 (=> BL_0_then_52__A1 (=> BL_0_then_52__A2 (and |ASSERT_139| (=> |ASSERT_139| (=> BL_0_then_52__A3 (and |ASSERT_140| (=> |ASSERT_140| (=> BL_0_then_52__A4 BL_0_afterIf_51))))))))))
(define-fun BL_0_else_53__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_53__A2 () Bool (= |BL_0_afterIf_51_source| 53))
(assert (= BL_0_else_53 (=> BL_0_else_53__A1 (=> BL_0_else_53__A2 BL_0_afterIf_51))))
(define-fun |_JML__tmp64| () Bool (or (not (and (< 0 |_JML__tmp56|) (< 0 |_JML__tmp60|))) (<= |_JML__tmp56| (- 2147483647 |_JML__tmp60|))))
(define-fun |_JML__tmp65| () Bool (or (not (and (< |_JML__tmp56| 0) (< |_JML__tmp60| 0))) (<= (- (- 2147483648) |_JML__tmp60|) |_JML__tmp56|)))
(define-fun |_JML__tmp66| () Int (ite (< 2147483647 (+ |_JML__tmp56| |_JML__tmp60|)) (+ (+ (+ |_JML__tmp56| |_JML__tmp60|) (- 2147483648)) (- 2147483648)) (ite (< (+ |_JML__tmp56| |_JML__tmp60|) (- 2147483648)) (- (- (+ |_JML__tmp56| |_JML__tmp60|) (- 2147483648)) (- 2147483648)) (+ |_JML__tmp56| |_JML__tmp60|))))
(define-fun |_JML__tmp67| () Int (select (select arrays_INT_0_828___33 |cumArr_478_478___23|) |_JML__tmp49|))
(define-fun BL_0_afterIf_51__A1 () Bool (and (<= (- 2147483648) |_JML__tmp56|) (<= |_JML__tmp56| 2147483647)))
(define-fun BL_0_afterIf_51__A2 () Bool (and (<= (- 2147483648) |_JML__tmp60|) (<= |_JML__tmp60| 2147483647)))
(define-fun BL_0_afterIf_51__A3 () Bool (= |ASSERT_143| (or (not (and (< 0 |_JML__tmp56|) (< 0 |_JML__tmp60|))) (<= |_JML__tmp56| (- 2147483647 |_JML__tmp60|)))))
(define-fun BL_0_afterIf_51__A4 () Bool (= |ASSERT_144| (or (not (and (< |_JML__tmp56| 0) (< |_JML__tmp60| 0))) (<= (- (- 2147483648) |_JML__tmp60|) |_JML__tmp56|))))
(define-fun BL_0_afterIf_51__A5 () Bool (= arrays_INT_0_828___33 (store arrays_INT_0_828___30 |cumArr_478_478___23| (store (select arrays_INT_0_828___30 |cumArr_478_478___23|) |_JML__tmp49| |_JML__tmp66|))))
(define-fun BL_0_afterIf_51__A6 () Bool (= |CumFreq__heap___0_435___34| 5))
(assert (= BL_0_afterIf_51 (=> BL_0_afterIf_51__A1 (=> BL_0_afterIf_51__A2 (=> BL_0_afterIf_51__A3 (and |ASSERT_143| (=> |ASSERT_143| (=> BL_0_afterIf_51__A4 (and |ASSERT_144| (=> |ASSERT_144| (=> BL_0_afterIf_51__A5 (=> BL_0_afterIf_51__A6 BL_705_AfterLabel_44))))))))))))
(define-fun |_JML__tmp68| () Int |j_675_700___29|)
(define-fun |_JML__tmp69| () Bool (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1))))
(define-fun |_JML__tmp70| () Bool (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|)))
(define-fun |_JML__tmp71| () Int (ite (< 2147483647 (+ |j_675_700___29| 1)) (+ (+ (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (ite (< (+ |j_675_700___29| 1) (- 2147483648)) (- (- (+ |j_675_700___29| 1) (- 2147483648)) (- 2147483648)) (+ |j_675_700___29| 1))))
(define-fun |_JML__tmp72| () Int |j_675_700___35|)
(define-fun |_JML__tmp73| () Bool (and (<= 0 |j_675_700___35|) (< |j_675_700___35| |high_461_461___16|)))
(define-fun-rec sum_2 ((lo Int)(|i| Int)) Int (ite (< |i| lo) 0 (+ (sum_2 lo (- |i| 1)) (ite (and (<= 0 |i|) (<= |i| |j_675_700___35|)) (select (select arrays_INT_0_828___33 |arr_443_443___14|) |i|) 0))))
(declare-fun |_JML__tmp75| () Int)
(assert (= |_JML__tmp75| (sum_2 0 1000)))
(define-fun |_JML__tmp76| () Bool (= (select (select arrays_INT_0_828___33 |cumArr_478_478___23|) |j_675_700___35|) |_JML__tmp75|))
(define-fun |_JML__tmp77| () Int (- |high_461_461___16| |j_675_700___35|))
(define-fun |_JML__tmp78| () Int |_JML__tmp77|)
(define-fun BL_705_AfterLabel_44__A1 () Bool (and (<= (- 2147483648) |j_675_700___29|) (<= |j_675_700___29| 2147483647)))
(define-fun BL_705_AfterLabel_44__A2 () Bool (= |ASSERT_146| (or (not (and (< 0 |j_675_700___29|) (< 0 1))) (<= |j_675_700___29| (- 2147483647 1)))))
(define-fun BL_705_AfterLabel_44__A3 () Bool (= |ASSERT_147| (or (not (and (< |j_675_700___29| 0) (< 1 0))) (<= (- (- 2147483648) 1) |j_675_700___29|))))
(define-fun BL_705_AfterLabel_44__A4 () Bool (= |j_675_700___35| |_JML__tmp71|))
(define-fun BL_705_AfterLabel_44__A5 () Bool (= |index_666_27_666_666___36| (+ |index_666_27_666_705___31| 1)))
(define-fun BL_705_AfterLabel_44__A6 () Bool (= |ASSERT_148| |_JML__tmp73|))
(define-fun BL_705_AfterLabel_44__A7 () Bool (= |ASSERT_149| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_705_AfterLabel_44__A8 () Bool (= |ASSERT_150| (or (not (distinct |cumArr_478_478___23| NULL)) (<= 0 |j_675_700___35|))))
(define-fun BL_705_AfterLabel_44__A9 () Bool (= |ASSERT_151| (or (not (distinct |cumArr_478_478___23| NULL)) (> (select __JMLlength |cumArr_478_478___23|) |j_675_700___35|))))
(define-fun BL_705_AfterLabel_44__A10 () Bool (= |ASSERT_152| |_JML__tmp76|))
(define-fun BL_705_AfterLabel_44__A11 () Bool (= |ASSERT_153| (< |_JML__tmp78| |_JML__tmp37|)))
(assert (= BL_705_AfterLabel_44 (=> BL_705_AfterLabel_44__A1 (=> BL_705_AfterLabel_44__A2 (and |ASSERT_146| (=> |ASSERT_146| (=> BL_705_AfterLabel_44__A3 (and |ASSERT_147| (=> |ASSERT_147| (=> BL_705_AfterLabel_44__A4 (=> BL_705_AfterLabel_44__A5 (=> BL_705_AfterLabel_44__A6 (and |ASSERT_148| (=> |ASSERT_148| (=> BL_705_AfterLabel_44__A7 (and |ASSERT_149| (=> |ASSERT_149| (=> BL_705_AfterLabel_44__A8 (and |ASSERT_150| (=> |ASSERT_150| (=> BL_705_AfterLabel_44__A9 (and |ASSERT_151| (=> |ASSERT_151| (=> BL_705_AfterLabel_44__A10 (and |ASSERT_152| (=> |ASSERT_152| (=> BL_705_AfterLabel_44__A11 (and |ASSERT_153| (=> |ASSERT_153| BL_666_LoopContinue_37)))))))))))))))))))))))))))))
(assert (= BL_666_LoopContinue_37 true))
(define-fun BL_666_LoopEnd_38__A1 () Bool (not true))
(define-fun BL_666_LoopEnd_38__A2 () Bool (= |index_666_27_666_705___31| |index_666_27_666_666___27|))
(define-fun BL_666_LoopEnd_38__A3 () Bool (= |j_675_700___29| |j_675_675___26|))
(define-fun BL_666_LoopEnd_38__A4 () Bool (= |CumFreq__heap___0_435___32| |CumFreq__heap___0_435___25|))
(define-fun BL_666_LoopEnd_38__A5 () Bool (= arrays_INT_0_828___30 arrays_INT_0_517___24))
(define-fun BL_666_LoopEnd_38__A6 () Bool (= |BL_666_LoopAfter_39_source| 38))
(assert (= BL_666_LoopEnd_38 (=> BL_666_LoopEnd_38__A1 (=> BL_666_LoopEnd_38__A2 (=> BL_666_LoopEnd_38__A3 (=> BL_666_LoopEnd_38__A4 (=> BL_666_LoopEnd_38__A5 (=> BL_666_LoopEnd_38__A6 BL_666_LoopAfter_39))))))))
(define-fun |_JML__tmp79| () Int (- (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |high_461_461___16|) (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |low_452_452___15|)))
(define-fun |_JML__tmp80| () Bool (and (<= |java.lang.Integer_MIN_VALUE| |_JML__tmp79|) (<= |_JML__tmp79| |java.lang.Integer_MAX_VALUE|)))
(define-fun |_JML__tmp81| () Int (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |high_461_461___16|))
(define-fun BL_666_LoopAfter_39__A1 () Bool (= |ASSERT_154| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_666_LoopAfter_39__A2 () Bool (= |ASSERT_155| (or (not (distinct |cumArr_478_478___23| NULL)) (<= 0 |high_461_461___16|))))
(define-fun BL_666_LoopAfter_39__A3 () Bool (= |ASSERT_156| (or (not (distinct |cumArr_478_478___23| NULL)) (> (select __JMLlength |cumArr_478_478___23|) |high_461_461___16|))))
(define-fun BL_666_LoopAfter_39__A4 () Bool (= |ASSERT_157| (or (not (and (distinct |cumArr_478_478___23| NULL) (distinct |cumArr_478_478___23| NULL))) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_666_LoopAfter_39__A5 () Bool (= |ASSERT_158| (or (not (and (distinct |cumArr_478_478___23| NULL) (distinct |cumArr_478_478___23| NULL))) (<= 0 |low_452_452___15|))))
(define-fun BL_666_LoopAfter_39__A6 () Bool (= |ASSERT_159| (or (not (and (distinct |cumArr_478_478___23| NULL) (distinct |cumArr_478_478___23| NULL))) (> (select __JMLlength |cumArr_478_478___23|) |low_452_452___15|))))
(define-fun BL_666_LoopAfter_39__A7 () Bool |_JML__tmp80|)
(define-fun BL_666_LoopAfter_39__A8 () Bool (= |ASSERT_161| (distinct |__JML_AssumeCheck_| 3)))
(define-fun BL_666_LoopAfter_39__A9 () Bool (= |ASSERT_162| (distinct |cumArr_478_478___23| NULL)))
(define-fun BL_666_LoopAfter_39__A10 () Bool (= |ASSERT_163| (<= 0 |high_461_461___16|)))
(define-fun BL_666_LoopAfter_39__A11 () Bool (= |ASSERT_164| (> (select __JMLlength |cumArr_478_478___23|) |high_461_461___16|)))
(assert (= BL_666_LoopAfter_39 (=> BL_666_LoopAfter_39__A1 (and |ASSERT_154| (=> |ASSERT_154| (=> BL_666_LoopAfter_39__A2 (and |ASSERT_155| (=> |ASSERT_155| (=> BL_666_LoopAfter_39__A3 (and |ASSERT_156| (=> |ASSERT_156| (=> BL_666_LoopAfter_39__A4 (and |ASSERT_157| (=> |ASSERT_157| (=> BL_666_LoopAfter_39__A5 (and |ASSERT_158| (=> |ASSERT_158| (=> BL_666_LoopAfter_39__A6 (and |ASSERT_159| (=> |ASSERT_159| (=> BL_666_LoopAfter_39__A7 (=> BL_666_LoopAfter_39__A8 (and |ASSERT_161| (=> |ASSERT_161| (=> BL_666_LoopAfter_39__A9 (and |ASSERT_162| (=> |ASSERT_162| (=> BL_666_LoopAfter_39__A10 (and |ASSERT_163| (=> |ASSERT_163| (=> BL_666_LoopAfter_39__A11 (and |ASSERT_164| (=> |ASSERT_164| (and BL_0_then_55 BL_0_else_56))))))))))))))))))))))))))))))))))
(define-fun |_JML__tmp82| () Int (select |CumFreq_`alloc___31_0___4| |cumArr_478_478___23|))
(define-fun |_JML__tmp83| () Bool (> |_JML__tmp82| 0))
(declare-fun |_JML__tmp84| () Bool)
(define-fun BL_0_then_55__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_55__A2 () Bool (= |ASSERT_165| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_then_55__A3 () Bool (= |ASSERT_166| (or |_JML__tmp84| (or |_JML__tmp83| true))))
(define-fun BL_0_then_55__A4 () Bool (= |BL_0_afterIf_54_source| 55))
(assert (= BL_0_then_55 (=> BL_0_then_55__A1 (=> BL_0_then_55__A2 (and |ASSERT_165| (=> |ASSERT_165| (=> BL_0_then_55__A3 (and |ASSERT_166| (=> |ASSERT_166| (=> BL_0_then_55__A4 BL_0_afterIf_54))))))))))
(define-fun BL_0_else_56__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_56__A2 () Bool (= |BL_0_afterIf_54_source| 56))
(assert (= BL_0_else_56 (=> BL_0_else_56__A1 (=> BL_0_else_56__A2 BL_0_afterIf_54))))
(define-fun |_JML__tmp85| () Int (select (select arrays_INT_0_828___30 |cumArr_478_478___23|) |low_452_452___15|))
(define-fun BL_0_afterIf_54__A1 () Bool (= |ASSERT_167| (distinct |cumArr_478_478___23| NULL)))
(define-fun BL_0_afterIf_54__A2 () Bool (= |ASSERT_168| (<= 0 |low_452_452___15|)))
(define-fun BL_0_afterIf_54__A3 () Bool (= |ASSERT_169| (> (select __JMLlength |cumArr_478_478___23|) |low_452_452___15|)))
(assert (= BL_0_afterIf_54 (=> BL_0_afterIf_54__A1 (and |ASSERT_167| (=> |ASSERT_167| (=> BL_0_afterIf_54__A2 (and |ASSERT_168| (=> |ASSERT_168| (=> BL_0_afterIf_54__A3 (and |ASSERT_169| (=> |ASSERT_169| (and BL_0_then_58 BL_0_else_59))))))))))))
(define-fun |_JML__tmp86| () Int (select |CumFreq_`alloc___31_0___4| |cumArr_478_478___23|))
(define-fun |_JML__tmp87| () Bool (> |_JML__tmp86| 0))
(declare-fun |_JML__tmp88| () Bool)
(define-fun BL_0_then_58__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_58__A2 () Bool (= |ASSERT_170| (or (not (distinct |cumArr_478_478___23| NULL)) (distinct |cumArr_478_478___23| NULL))))
(define-fun BL_0_then_58__A3 () Bool (= |ASSERT_171| (or |_JML__tmp88| (or |_JML__tmp87| true))))
(define-fun BL_0_then_58__A4 () Bool (= |BL_0_afterIf_57_source| 58))
(assert (= BL_0_then_58 (=> BL_0_then_58__A1 (=> BL_0_then_58__A2 (and |ASSERT_170| (=> |ASSERT_170| (=> BL_0_then_58__A3 (and |ASSERT_171| (=> |ASSERT_171| (=> BL_0_then_58__A4 BL_0_afterIf_57))))))))))
(define-fun BL_0_else_59__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_59__A2 () Bool (= |BL_0_afterIf_57_source| 59))
(assert (= BL_0_else_59 (=> BL_0_else_59__A1 (=> BL_0_else_59__A2 BL_0_afterIf_57))))
(define-fun |_JML__tmp89| () Bool (or (not (and (< 0 |_JML__tmp81|) (< |_JML__tmp85| 0))) (<= |_JML__tmp81| (+ 2147483647 |_JML__tmp85|))))
(define-fun |_JML__tmp90| () Bool (or (not (and (< |_JML__tmp81| 0) (< 0 |_JML__tmp85|))) (<= (+ (- 2147483648) |_JML__tmp85|) |_JML__tmp81|)))
(define-fun |_JML__tmp91| () Int (ite (< 2147483647 (- |_JML__tmp81| |_JML__tmp85|)) (+ (+ (- |_JML__tmp81| |_JML__tmp85|) (- 2147483648)) (- 2147483648)) (ite (< (- |_JML__tmp81| |_JML__tmp85|) (- 2147483648)) (- (- (- |_JML__tmp81| |_JML__tmp85|) (- 2147483648)) (- 2147483648)) (- |_JML__tmp81| |_JML__tmp85|))))
(define-fun BL_0_afterIf_57__A1 () Bool (and (<= (- 2147483648) |_JML__tmp81|) (<= |_JML__tmp81| 2147483647)))
(define-fun BL_0_afterIf_57__A2 () Bool (and (<= (- 2147483648) |_JML__tmp85|) (<= |_JML__tmp85| 2147483647)))
(define-fun BL_0_afterIf_57__A3 () Bool (= |ASSERT_174| (or (not (and (< 0 |_JML__tmp81|) (< |_JML__tmp85| 0))) (<= |_JML__tmp81| (+ 2147483647 |_JML__tmp85|)))))
(define-fun BL_0_afterIf_57__A4 () Bool (= |ASSERT_175| (or (not (and (< |_JML__tmp81| 0) (< 0 |_JML__tmp85|))) (<= (+ (- 2147483648) |_JML__tmp85|) |_JML__tmp81|))))
(define-fun BL_0_afterIf_57__A5 () Bool (= |`result_435_986___37| |_JML__tmp91|))
(define-fun BL_0_afterIf_57__A6 () Bool (= |`terminationPosition_435_986___38| 986))
(define-fun BL_0_afterIf_57__A7 () Bool (= |`exception_435_986___39| NULL))
(assert (= BL_0_afterIf_57 (=> BL_0_afterIf_57__A1 (=> BL_0_afterIf_57__A2 (=> BL_0_afterIf_57__A3 (and |ASSERT_174| (=> |ASSERT_174| (=> BL_0_afterIf_57__A4 (and |ASSERT_175| (=> |ASSERT_175| (=> BL_0_afterIf_57__A5 (=> BL_0_afterIf_57__A6 (=> BL_0_afterIf_57__A7 BL_986_return_60)))))))))))))
(assert (= BL_986_return_60 BL_435tryTarget_23))
(assert (= BL_435tryTarget_23 (and BL_435noException_25 BL_435nocatch_26)))
(define-fun BL_435noException_25__A1 () Bool (= |`exception_435_986___39| NULL))
(define-fun BL_435noException_25__A2 () Bool (= |BL_435_finally_24_source| 25))
(assert (= BL_435noException_25 (=> BL_435noException_25__A1 (=> BL_435noException_25__A2 BL_435_finally_24))))
(define-fun BL_435nocatch_26__A1 () Bool (distinct |`exception_435_986___39| NULL))
(define-fun BL_435nocatch_26__A2 () Bool (= |BL_435_finally_24_source| 26))
(assert (= BL_435nocatch_26 (=> BL_435nocatch_26__A1 (=> BL_435nocatch_26__A2 BL_435_finally_24))))
(define-fun BL_435_finally_24__A1 () Bool (= |__JMLsavedException_435_435_435___40| |`exception_435_986___39|))
(define-fun BL_435_finally_24__A2 () Bool (= |__JMLsavedTermination_435_435_435___41| |`terminationPosition_435_986___38|))
(define-fun BL_435_finally_24__A3 () Bool (= |ASSERT_176| (distinct |__JML_AssumeCheck_| 4)))
(assert (= BL_435_finally_24 (=> BL_435_finally_24__A1 (=> BL_435_finally_24__A2 (=> BL_435_finally_24__A3 (and |ASSERT_176| (=> |ASSERT_176| (and BL_0_then_62 BL_0_else_63))))))))
(define-fun BL_0_then_62__A1 () Bool (= |`exception_435_986___39| NULL))
(assert (= BL_0_then_62 (=> BL_0_then_62__A1 (and BL_0_then_65 BL_0_else_66))))
(define-fun-rec sum_3 ((lo Int)(|j| Int)) Int (ite (< |j| lo) 0 (+ (sum_3 lo (- |j| 1)) (ite (and (<= 0 |j|) (<= |j| |high_461_461___16|)) (select (select arrays_INT_0_828___30 |arr_443_443___14|) |j|) 0))))
(declare-fun |_JML__tmp93| () Int)
(assert (= |_JML__tmp93| (sum_3 0 1000)))
(define-fun-rec sum_4 ((lo Int)(|i| Int)) Int (ite (< |i| lo) 0 (+ (sum_4 lo (- |i| 1)) (ite (and (<= 0 |i|) (<= |i| |low_452_452___15|)) (select (select arrays_INT_0_828___30 |arr_443_443___14|) |i|) 0))))
(declare-fun |_JML__tmp95| () Int)
(assert (= |_JML__tmp95| (sum_4 0 1000)))
(define-fun |_JML__tmp96| () Int (- |_JML__tmp93| |_JML__tmp95|))
(define-fun |_JML__tmp97| () Bool (= |`result_435_986___37| |_JML__tmp96|))
(define-fun BL_0_then_65__A1 () Bool |Pre_2_300_198___20|)
(define-fun BL_0_then_65__A2 () Bool (= |ASSERT_177| |_JML__tmp97|))
(define-fun BL_0_then_65__A3 () Bool (= |BL_0_afterIf_64_source| 65))
(assert (= BL_0_then_65 (=> BL_0_then_65__A1 (=> BL_0_then_65__A2 (and |ASSERT_177| (=> |ASSERT_177| (=> BL_0_then_65__A3 BL_0_afterIf_64)))))))
(define-fun BL_0_else_66__A1 () Bool (not |Pre_2_300_198___20|))
(define-fun BL_0_else_66__A2 () Bool (= |BL_0_afterIf_64_source| 66))
(assert (= BL_0_else_66 (=> BL_0_else_66__A1 (=> BL_0_else_66__A2 BL_0_afterIf_64))))
(define-fun BL_0_afterIf_64__A1 () Bool (= |BL_0_afterIf_61_source| 64))
(assert (= BL_0_afterIf_64 (=> BL_0_afterIf_64__A1 BL_0_afterIf_61)))
(define-fun BL_0_else_63__A1 () Bool (not (= |`exception_435_986___39| NULL)))
(define-fun BL_0_else_63__A2 () Bool (= |ASSERT_178| (or (not (and (distinct |`exception_435_986___39| NULL) (javaSubType (javaTypeOf |`exception_435_986___39|) T_java_lang_Exception))) (or (not |Pre_2_300_198___20|) (or false (and (distinct |`exception_435_986___39| NULL) (javaSubType (javaTypeOf |`exception_435_986___39|) T_java_lang_RuntimeException)))))))
(define-fun BL_0_else_63__A3 () Bool (= |BL_0_afterIf_61_source| 63))
(assert (= BL_0_else_63 (=> BL_0_else_63__A1 (=> BL_0_else_63__A2 (and |ASSERT_178| (=> |ASSERT_178| (=> BL_0_else_63__A3 BL_0_afterIf_61)))))))
(define-fun BL_0_afterIf_61__A1 () Bool (= |`exception_435_435___42| |__JMLsavedException_435_435_435___40|))
(define-fun BL_0_afterIf_61__A2 () Bool (= |`terminationPosition_435_435___43| |__JMLsavedTermination_435_435_435___41|))
(assert (= BL_0_afterIf_61 (=> BL_0_afterIf_61__A1 (=> BL_0_afterIf_61__A2 (and BL_435finallyNormal_27 BL_435finallyExit_28)))))
(define-fun BL_435finallyNormal_27__A1 () Bool (= |`terminationPosition_435_435___43| 0))
(define-fun BL_435finallyNormal_27__A2 () Bool (= |BL_435_AfterTry_22_source| 27))
(assert (= BL_435finallyNormal_27 (=> BL_435finallyNormal_27__A1 (=> BL_435finallyNormal_27__A2 BL_435_AfterTry_22))))
(define-fun BL_435finallyExit_28__A1 () Bool (distinct |`terminationPosition_435_435___43| 0))
(define-fun BL_435finallyExit_28__A2 () Bool (= |BL_435_AfterTry_22_source| 28))
(assert (= BL_435finallyExit_28 (=> BL_435finallyExit_28__A1 (=> BL_435finallyExit_28__A2 BL_435_AfterTry_22))))
(assert (= BL_435_AfterTry_22 true))
(assert (not BL_435Start_1))
(push 1)
(assert (= __JML_AssumeCheck_ 0))
(push 1)
(check-sat)
